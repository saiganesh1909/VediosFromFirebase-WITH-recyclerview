package com.sample.vedioclickfromfirebase;

import android.app.DownloadManager;
import android.content.Context;
import android.content.Intent;
import android.media.MediaPlayer;
import android.net.Uri;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.bumptech.glide.Glide;
import com.squareup.picasso.Callback;
import com.squareup.picasso.NetworkPolicy;
import com.squareup.picasso.Picasso;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import static android.os.Environment.DIRECTORY_DOWNLOADS;

public class VedioModelAdapter extends RecyclerView.Adapter<VedioModelAdapter.ViewHolder> {
    List<VedioModel> vedioModels=new ArrayList<>();
    Context context;
    ClickListener clickListener;

    public VedioModelAdapter(List<VedioModel> vedioModels, Context context, ClickListener clickListener) {
        this.vedioModels = vedioModels;
        this.context = context;
        this.clickListener = clickListener;
    }

    @NonNull
    @Override
    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View v= LayoutInflater.from(context).inflate(R.layout.item_row,parent,false);
return new ViewHolder(v);
    }

    @Override
    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
        final VedioModel vedioModel=vedioModels.get(position);
holder.title.setText(vedioModel.getTitle());
holder.filepath.setText(vedioModel.getUrl());
Uri vedio=Uri.parse(vedioModel.getUrl());
        MediaPlayer mediaPlayer=MediaPlayer.create(context, Uri.parse(vedio.toString()));
        double msec=0;
        if(mediaPlayer!=null){
            msec=mediaPlayer.getDuration();

        }
double minutes=(msec%3600)/60;
        holder.duration .setText(""+String.format("%.2f",minutes));
       // Glide.with(context).load(vedioModel.getUrl()).into(holder.thumb);
       // holder.thumb.setImageResource(vedioModel.getImage().toString());
        //Picasso.get().load(vedioModel.getImage()).placeholder(R.mipmap.ic_launcher).fit().centerCrop().into(holder.thumb);
        Picasso.get().load(vedioModel.getImage()).networkPolicy(NetworkPolicy.OFFLINE).into(holder.thumb, new Callback() {
            @Override
            public void onSuccess() {

            }

            @Override
            public void onError(Exception e) {
               // Picasso.get().load(vedioModel.getImage()).placeholder(R.mipmap.ic_launcher).fit().centerCrop().into(holder.thumb);

            }
        });
        final double finalMsec = msec;
        holder.thumb.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if(finalMsec ==0){
                    Toast.makeText(context,"Invalid Vedio",Toast.LENGTH_SHORT).show();

                }
                else {
                    context.startActivity(new Intent(context, VedioPlayerActivity.class).putExtra("path_file",vedioModel.getUrl()));
                }

            }
        });
        holder.downloadbutton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                download(vedioModel.getUrl(),DIRECTORY_DOWNLOADS,vedioModel.getTitle());
            }
        });


    }

public void download(String url,String destinationdirectory,String title){
    DownloadManager downloadManager=(DownloadManager) context.getSystemService(Context.DOWNLOAD_SERVICE);
    Uri uri=Uri.parse(url);
    DownloadManager.Request request=new DownloadManager.Request(uri);
    request.setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED);

    request.setDestinationInExternalFilesDir(context,destinationdirectory, title);
    downloadManager.enqueue(request);
}
    @Override
    public int getItemCount() {
        return vedioModels.size();
    }

    public class ViewHolder extends RecyclerView.ViewHolder{
        private TextView title, duration, filepath;
        private ImageView thumb;
        private ImageButton downloadbutton;
        public ViewHolder(@NonNull View itemView) {
            super(itemView);
            title=itemView.findViewById(R.id.title);
            duration=itemView.findViewById(R.id.duration);
            filepath=itemView.findViewById(R.id.file_path);
            thumb=itemView.findViewById(R.id.thumnail);
            downloadbutton=itemView.findViewById(R.id.download_button);

        }
    }
}
